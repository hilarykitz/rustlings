{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4","program":"/Users/hkierans/.rustup/toolchains/1.46.0-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","same_file","/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=cbde115ec7b5c3c0","-C","extra-filename=-cbde115ec7b5c3c0","--out-dir","/Users/hkierans/git/rustlings/target/rls/wasm32-wasi/debug/deps","--target","wasm32-wasi","-L","dependency=/Users/hkierans/git/rustlings/target/rls/wasm32-wasi/debug/deps","-L","dependency=/Users/hkierans/git/rustlings/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/hkierans/.rustup/toolchains/1.46.0-x86_64-apple-darwin"],"output":"/Users/hkierans/git/rustlings/target/rls/wasm32-wasi/debug/deps/libsame_file-cbde115ec7b5c3c0.rmeta"},"prelude":{"crate_id":{"name":"same_file","disambiguator":[16758241196104626786,9718798701830888259]},"crate_root":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src","external_crates":[{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5667833858258883823,13242588530091765400]}},{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8110447602695971269,8676687311819459955]}},{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1977302655726686608,953103619856713457]}},{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11905209190829975376,3819393287013156986]}},{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11690492093593844056,2872191488609793282]}},{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[18098705458808837715,1814006493926881252]}},{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2611730592681041111,17032882826349286576]}},{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[457283805966065238,4600467572994166777]}},{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[12456973456254240080,8985489576662881139]}},{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[5747831985490409680,4186789431985934656]}},{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6601500434124963192,9147336962633508510]}},{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15111149435740138899,11337326753376177638]}},{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","num":13,"id":{"name":"wasi","disambiguator":[14368520281807761496,13345711174577213831]}}],"span":{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","byte_start":0,"byte_end":14800,"line_start":1,"line_end":530,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","byte_start":0,"byte_end":14800,"line_start":1,"line_end":530,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":18},{"krate":0,"index":28},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":6},{"krate":0,"index":15}],"decl_id":null,"docs":"This crate provides a safe and simple **cross platform** way to determine\nwhether two file paths refer to the same file or directory.","sig":null,"attributes":[{"value":"!\nThis crate provides a safe and simple **cross platform** way to determine\nwhether two file paths refer to the same file or directory.\n\nMost uses of this crate should be limited to the top-level [`is_same_file`]\nfunction, which takes two file paths and returns true if they refer to the\nsame file or directory:\n\n```rust,no_run\n# use std::error::Error;\nuse same_file::is_same_file;\n\n# fn try_main() -> Result<(), Box<Error>> {\nassert!(is_same_file(\"/bin/sh\", \"/usr/bin/sh\")?);\n#    Ok(())\n# }\n#\n# fn main() {\n#    try_main().unwrap();\n# }\n```\n\nAdditionally, this crate provides a [`Handle`] type that permits a more efficient\nequality check depending on your access pattern. For example, if one wanted to\ncheck whether any path in a list of paths corresponded to the process' stdout\nhandle, then one could build a handle once for stdout. The equality check for\neach file in the list then only requires one stat call instead of two. The code\nmight look like this:\n\n```rust,no_run\n# use std::error::Error;\nuse same_file::Handle;\n\n# fn try_main() -> Result<(), Box<Error>> {\nlet candidates = &[\n    \"examples/is_same_file.rs\",\n    \"examples/is_stderr.rs\",\n    \"examples/stderr\",\n];\nlet stdout_handle = Handle::stdout()?;\nfor candidate in candidates {\n    let handle = Handle::from_path(candidate)?;\n    if stdout_handle == handle {\n        println!(\"{:?} is stdout!\", candidate);\n    } else {\n        println!(\"{:?} is NOT stdout!\", candidate);\n    }\n}\n#    Ok(())\n# }\n#\n# fn main() {\n#     try_main().unwrap();\n# }\n```\n\nSee [`examples/is_stderr.rs`] for a runnable example and compare the output of:\n\n- `cargo run --example is_stderr 2> examples/stderr` and\n- `cargo run --example is_stderr`.\n\n[`is_same_file`]: fn.is_same_file.html\n[`Handle`]: struct.Handle.html\n[`examples/is_stderr.rs`]: https://github.com/BurntSushi/same-file/blob/master/examples/is_same_file.rs\n\n*/","span":{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","byte_start":0,"byte_end":1871,"line_start":1,"line_end":66,"column_start":1,"column_end":3}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","byte_start":1932,"byte_end":1954,"line_start":69,"line_end":69,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","byte_start":3103,"byte_end":3109,"line_start":107,"line_end":107,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/hkierans/.cargo/registry/src/github.com-1ecc6299db9ec823/same-file-1.0.4/src/lib.rs","byte_start":3103,"byte_end":3109,"line_start":107,"line_end":107,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}}]}